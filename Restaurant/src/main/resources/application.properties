# ===============================
# Application Configuration
# ===============================
spring.application.name=Restaurant
server.port=8081

# ===============================
# HTTP/2 Configuration
# ===============================
server.http2.enabled=true

# ===============================
# gRPC Server Configuration
# ===============================
grpc.server.port=9191
grpc.server.security.enabled=false

# ===============================
# Database Configuration
# ===============================
spring.datasource.url=jdbc:postgresql://localhost:5432/test3
spring.datasource.username=admin
spring.datasource.password=admin
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# ===============================
# JWT Configuration
# ===============================
security.jwt.secret-key=uLt7PJrHJl89TH3OnWPf1P8zF+ClXjbIQGd6KjSpGhc=
security.jwt.expiration-time=3600000

# ===============================
# Mail Configuration
# ===============================
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=fooddeliveryapp2024@gmail.com
spring.mail.password=jrdl ysxl hsrb nlhf
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# ===============================
# Logging Configuration
# ===============================
#logging.level.root=DEBUG
#logging.level.org.springframework=INFO
#logging.file.name=logs/food-delivery-app.log

# ===============================
# Protobuf and gRPC Configuration
# ===============================
grpc.client.message-service.address=static://localhost:9191
grpc.client.message-service.enable-keep-alive=true

# Kafka global configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.auto-offset-reset=latest

# Kafka consumer configuration
spring.kafka.consumer.group-id=customer-service
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Kafka producer configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Kafka topics
kafka.topic.order-status=order_status
kafka.topic.rider-request=rider-request
kafka.topic.customer-orders=order-restaurant-request


# ===============================
# Optional Environment Properties
# ===============================
spring.config.import=optional:file:.env[.properties]

