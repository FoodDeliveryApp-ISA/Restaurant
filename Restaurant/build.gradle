// Apply plugins
plugins {
	id 'java' // Core Java plugin
	id 'org.springframework.boot' version '3.4.0' // Spring Boot plugin for building applications
	id 'io.spring.dependency-management' version '1.1.6' // Manages Spring dependency versions
	id 'com.google.protobuf' version '0.9.2' // Plugin for working with Protocol Buffers (Protobuf)
}

// Define project group and version
group = 'com.ISA' // Your organization's group ID
version = '0.0.1-SNAPSHOT' // Project version

// Set Java toolchain for compatibility
java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17) // Specify Java 17 for the project
	}
}

// Define repositories to fetch dependencies
repositories {
	mavenCentral() // Use Maven Central repository
}

// Declare project dependencies
dependencies {
	// --- Core Spring Boot Dependencies ---
	implementation 'org.springframework.boot:spring-boot-starter-web' // Web and REST APIs
	implementation 'org.springframework.boot:spring-boot-starter-security' // Security (e.g., for authentication/authorization)
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // JPA (database persistence)
	implementation 'org.springframework.boot:spring-boot-starter-mail' // Email support
	implementation 'org.springframework.boot:spring-boot-starter-websocket' // WebSocket support

	// --- gRPC Dependencies ---
	implementation 'net.devh:grpc-spring-boot-starter:2.14.0.RELEASE' // gRPC integration for Spring Boot

	// --- Kafka Dependencies ---
	implementation 'org.springframework.kafka:spring-kafka' // Spring Kafka integration
	implementation 'org.apache.kafka:kafka-clients:3.9.0' // Kafka client library

	// --- Jakarta & Javax APIs ---
	implementation 'jakarta.validation:jakarta.validation-api:3.0.0' // Validation API (Jakarta EE)
	implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1' // Annotation API (Jakarta EE)
	implementation 'javax.annotation:javax.annotation-api:1.3.2' // Annotation API (legacy Java EE)

	// --- JWT Dependencies ---
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5' // JWT API for token handling
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5' // JWT implementation
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5' // JWT with Jackson for JSON parsing

	// --- Lombok (for reducing boilerplate code) ---
	compileOnly 'org.projectlombok:lombok' // Lombok for annotation-based code reduction
	annotationProcessor 'org.projectlombok:lombok' // Lombok annotation processing

	// --- Database Driver ---
	runtimeOnly 'org.postgresql:postgresql' // PostgreSQL driver

	// --- Testing Dependencies ---
	testImplementation 'org.springframework.boot:spring-boot-starter-test' // Spring Boot testing utilities
	testImplementation 'org.springframework.security:spring-security-test' // Security testing utilities
	testImplementation 'org.junit.jupiter:junit-jupiter' // JUnit 5 testing framework

	// --- Additional Dependencies ---
	implementation 'org.json:json:20230227' // JSON parsing library
}

// Configure test task to use JUnit Platform
test {
	useJUnitPlatform() // Enable JUnit 5 (JUnit Platform)
}

// Configure Protobuf (for gRPC)
protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:3.21.7" // Protoc compiler version
	}
	plugins {
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java:1.52.1' // gRPC plugin for protoc
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {} // Enable gRPC plugin for all tasks
		}
	}
}

// Configure Spring Boot application settings
springBoot {
	mainClass.set('com.ISA.Restaurant.RestaurantApplication') // Main application class
}
