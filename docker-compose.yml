version: "3.8"

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://10.20.11.29:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    ports:
      - 9092:9092

#   # Spring Boot Backend
#   backend:
#     build:
#       context: ./Restaurant
#       dockerfile: Dockerfile  # Fixed path to Dockerfile
#     ports:
#       - "8081:8081" # HTTP Port
#       - "9191:9191" # gRPC Port
#     environment:
#       - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/test1
#       - SPRING_DATASOURCE_USERNAME=admin
#       - SPRING_DATASOURCE_PASSWORD=admin
#     depends_on:
#       - db
#       - kafka

#   # PostgreSQL Database
#   db:
#     image: postgres:13
#     environment:
#       POSTGRES_DB: test1
#       POSTGRES_USER: admin
#       POSTGRES_PASSWORD: admin
#     ports:
#       - "5433:5433"
#     volumes:
#       - postgres_data:/var/lib/postgresql/data # Volume for data persistence

#   # PostgreSQL Adminer for DB management
#   adminer:
#     image: adminer
#     ports:
#       - "8082:8080"  # Changed port to avoid conflict with backend

  # Portainer for Docker Management
  portainer:
    image: portainer/portainer-ce:latest
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    restart: always

# Volumes to persist PostgreSQL and Portainer data
volumes:
  # postgres_data:
  portainer_data:





