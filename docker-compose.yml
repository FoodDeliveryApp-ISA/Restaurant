services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.1.60:9092,DOCKER://kafka:9093
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,DOCKER://0.0.0.0:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    ports:
      - 9092:9092

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    ports:
      - "8085:8080"

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    environment:
      REDIS_HOSTS: "local:redis:6379"
    ports:
      - "8086:8081"
    depends_on:
      - redis

  # backend:
  #   build:
  #     context: ./Restaurant
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8081:8081" # HTTP Port
  #     - "9191:9191" # gRPC Port
  #   env_file:
  #     - .env
  #   depends_on:
  #     - db
  #     - kafka

  # db:
  #   image: postgres:13
  #   environment:
  #     POSTGRES_DB: test1
  #     POSTGRES_USER: admin
  #     POSTGRES_PASSWORD: admin
  #   ports:
  #     - "5433:5433"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data

  # adminer:
  #   image: adminer
  #   ports:
  #     - "8082:8080"

  portainer:
    image: portainer/portainer-ce:latest
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    restart: always

volumes:
  postgres_data:
  portainer_data:
